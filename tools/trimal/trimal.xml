<tool id="trimAl" name="trimAl" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="20.01" license="MIT">
    <description></description>
    <xrefs>
        <xref type="bio.tools">trimal</xref>
    </xrefs>
    <macros>
        <token name="@TOOL_VERSION@">1.5.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <edam_topics>
        <edam_topic>topic_3293</edam_topic> <!-- phylogenetics -->
        <edam_topic>topic_0080</edam_topic> <!-- sequence analysis -->
    </edam_topics>
    <edam_operations>
        <edam_operation>operation_3192</edam_operation> <!--sequence trimming -->
    </edam_operations>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">trimal</requirement>
    </requirements>
    <version_command>trimal --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
trimal
-in '$inputfile'
-out '$outputfile'
-gt 0.5
    ]]></command>
    <inputs>
        <param argument="--inputfile" type="data" format="fasta" optional="false" label="Input multiple sequence alignment file" help=""/>
        <param argument="-gt" name="gapthreshold" type="float" label="1 - (fraction of gaps in the column)." help="Range: [0 - 1] Not compatible with -gat.">
            <validator type="in_range" min="0" max="1"/>
        </param>
    </inputs>
    <outputs>
        <data name="outputfile" format_source="inputfile" label="${tool.name} on ${on_string}: trimmed sequence file"/>
    </outputs>
    <tests>
        <test expect_num_outputs="1"><!-- test basic case -->
            <param name="inputfile" value="example.005.AA.fasta" ftype="fasta"/>
            <param name="gapthreshold" value="0.5"/>
            <output name="outputfile" file="example.005.AA.out.fasta" ftype="fasta" lines_diff="0"/>
        </test>
        <!-- Hint: You can use [ctrl+alt+t] after defining the inputs/outputs to auto-scaffold some basic test cases. -->
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

trimAl is a tool for the automated removal of spurious sequences or poorly aligned regions from a multiple sequence alignment.

trimAl can consider several parameters, alone or in multiple combinations, in order to select the most-reliable positions in the alignment. These include the proportion of sequences with a gap, the level of residue similarity and, if several alignments for the same set of sequences are provided, the consistency level of columns among alignments. Moreover, trimAl allows to manually select a set of columns and sequences to be removed from the alignment.

trimAl implements a series of automated algorithms that trim the alignment searching for optimum thresholds based on inherent characteristics of the input alignment, to be used so that the signal-to-noise ratio after alignment trimming phase is increased.

Among trimAl’s additional features, trimAl allows getting the complementary alignment (columns that were trimmed), to compute statistics from the alignment, to select the output file format , to get a summary of trimAl’s trimming in HTML and SVG formats, and many other options.


**Input**

A multiple sequence alignment file. Available input formats: clustal, fasta, nexus, phylip32, phylip40, pir

**Output**

Optimized alignment. By default in the same format as input file, unless explicitly set by user.


    ]]></help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btp348</citation>
    </citations>
</tool>
