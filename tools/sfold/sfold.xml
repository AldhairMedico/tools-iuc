<tool id="sfold" name="Sfold" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="@PROFILE@">
    <description>Predict the probable RNA secondary structures through structure ensemble sampling</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <expand macro="requirements"/>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #if not $non_commercial_use
            >&2 echo "this tool is only available for non commercial use";
            exit 1;
        #end if
        mkdir -p 'output' &&
        sfold $fasta \
            -a $a
            #if $f: 
                -f $f
            #end if
            #if str($l) != '':
                -l $l
            #end if
            #if $m: 
                -m $m
            #end if
            -w $w
            -i $i
    ]]></command>
    <inputs>
        <param name="non_commercial_use" label="I certify that I am not using this tool for commercial purposes." type="boolean" truevalue="NON_COMMERCIAL_USE" falsevalue="COMMERCIAL_USE" checked="False">
            <validator type="expression" message="This tool is only available for non-commercial use.">value == True</validator>
        </param>
        <param argument="fasta" type="data" format="fasta" label="FASTA input"/>
        <param argument="a" type="boolean" truevalue="1" falsevalue="0" checked="true" label="Run clustering on the sampled ensemble?"/>
        <param argument="f" type="data" format="ct" optional="true" label="Constrain data" help="Constraint syntax follows what is used in mfold 3.1"/>
        <param argument="l" type="integer" min="0" optional="true" label="Maximum distance between paired bases"/>
        <param argument="m" type="data" format="ct" optional="true" label="MFE structure" help="If provided, Sfold clustering module will determine the cluster to which this structure belongs."/>
        <param argument="w" type="integer" value="20" label="Length of antisense oligos"/>
        <param argument="i" type="select" label="Module">
            <option value="0">None</option>
            <option value="1">Sirna</option>
            <option value="2">Soligo</option>
            <option value="3">Both</option>
        </param>
        <section name="output" title="Output Options">
            <param name="output_selector" type="select" multiple="true" optional="true" display="checkboxes" label="Select / Deselect all">
                <option value="log">Output log files</option>
                <option value="ct" selected="true">Output ct files</option>
                <option value="bp" selected="true">Output bp files</option>
                <option value="clusters">Output cluster files</option>
            </param>
        </section>
    </inputs>
    <outputs>
        <collection name="sfold_out" type="list" label="${tool.name} on ${on_string}: sfold log files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.out$" format="txt" directory="output/"/>
            <filter>output['output_selector'] and 'log' in output['output_selector']</filter>
        </collection>
        <collection name="sfold_bp" type="list" label="${tool.name} on ${on_string}: sfold bp files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.bp$" format="txt" directory="output/"/>
            <filter>output['output_selector'] and 'bp' in output['output_selector']</filter>
        </collection>
        <collection name="sfold_ct" type="list" label="${tool.name} on ${on_string}: sfold ct files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.ct$" format="ct" directory="output/"/>
            <filter>output['output_selector'] and 'ct' in output['output_selector']</filter>
        </collection>
        <collection name="sfold__cluster_out" type="list" label="${tool.name} on ${on_string}: sfold cluster log files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.out$" format="txt" directory="output/clusters"/>
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.list$" format="txt" directory="output/clusters"/>
            <filter>output['output_selector'] and 'clusters' in output['output_selector'] and 'log' in output['output_selector']</filter>
        </collection>
        <collection name="sfold_cluster_bp" type="list" label="${tool.name} on ${on_string}: sfold cluster bp files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.bp$" format="txt" directory="output/clusters"/>
            <filter>output['output_selector'] and 'clusters' in output['output_selector'] and 'bp' in output['output_selector']</filter>
        </collection>
        <collection name="sfold_cluster_ct" type="list" label="${tool.name} on ${on_string}: sfold cluster ct files">
            <discover_datasets pattern="(?P&lt;name&gt;.+)\.ct$" format="ct" directory="output/clusters"/>
            <filter>output['output_selector'] and 'clusters' in output['output_selector'] and 'ct' in output['output_selector']</filter>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="3">
            <param name="non_commercial_use" value="True"/>
            <param name="fasta" value="seq.fasta"/>
            <param name="a" value="true"/>
            <param name="f" value="cons.ct"/>
            <param name="l" value="30"/>
            <param name="m" value="mfe.ct"/>
            <param name="w" value="20"/>
            <param name="i" value="1"/>
            <param name="output_selector" value="log,ct,bp"/>
            <output_collection name="sfold_out" type="list">
                <element name="10structure">
                    <assert_contents>
                        <has_n_lines n="770"/>
                        <has_text text="Structure        1     -28.90       0.74863E-01"/>
                    </assert_contents>
                </element>
                <element name="10structure_2">
                    <assert_contents>
                        <has_n_lines n="10"/>
                    </assert_contents>
                </element>
                <element name="bp.dist.from.ecentroid">
                    <assert_contents>
                        <has_n_lines n="1001"/>
                        <has_text text="1 5"/>
                    </assert_contents>
                </element>
                <element name="bp">
                    <assert_contents>
                        <has_text text="Structure            1"/>
                    </assert_contents>
                </element>
                <element name="bprob">
                    <assert_contents>
                        <has_n_lines n="4"/>
                        <has_text text=".16225072123690604808E+01L"/>
                    </assert_contents>
                </element>
                <element name="cdf">
                    <assert_contents>
                        <has_n_lines n="101"/>
                        <has_text text="0   0.07600000"/>
                    </assert_contents>
                </element>
                <element name="fe">
                    <assert_contents>
                        <has_n_lines n="1000"/>
                        <has_text text="1     -28.70"/>
                    </assert_contents>
                </element>
                <element name="fe_init">
                    <assert_contents>
                        <has_n_lines n="1002"/>
                        <has_text text="Ensemble free energy (based on initial energies):-RT ln(U)=  -28.297589224477537   "/>
                    </assert_contents>
                </element>
                <element name="loopr">
                    <assert_contents>
                        <has_n_lines n="76"/>
                        <has_text text=" 1 G  0.000 0.000 0.000 0.000 0.169 0.169"/>
                    </assert_contents>
                </element>
                <element name="pdf">
                    <assert_contents>
                        <has_n_lines n="21"/>
                        <has_text text="  0   0.07600000"/>
                    </assert_contents>
                </element>
                <element name="sample">
                    <assert_contents>
                        <has_n_lines n="1"/>
                        <has_text text="Structure data in BP format removed to"/>
                    </assert_contents>
                </element>
                <element name="sample_1000">
                    <assert_contents>
                        <has_n_lines n="6745"/>
                        <has_text text="(i j k): helix formed by base pairs i-j, (i+1)-(j-1),...,(i+k-1)-(j-k+1)"/>
                    </assert_contents>
                </element>
                <element name="sclass">
                    <assert_contents>
                        <has_n_lines n="136"/>
                        <has_text text="Sequence length            = 76"/>
                    </assert_contents>
                </element>
                <element name="sfold">
                    <assert_contents>
                        <has_n_lines n="42"/>
                        <has_text text="1 G"/>
                    </assert_contents>
                </element>
                <element name="smfe">
                    <assert_contents>
                        <has_n_lines n="2"/>
                        <has_text text="Minimum free energy in the sample (SMFE)=  -28.90 kcal/mol"/>
                    </assert_contents>
                </element>
                <element name="sstrand">
                    <assert_contents>
                        <has_n_lines n="2"/>
                        <has_text text="  1 G C  0.169 0.013 0.002"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[

test help

    ]]></help>
    <citations>
        <expand macro="citations"/>
    </citations>
</tool>
